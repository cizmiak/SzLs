USE [SpravaZmluv]
GO
/****** Object:  StoredProcedure [dbo].[SendOfferEmail]    Script Date: 20.02.2019 23:44:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[SendOfferEmail]
AS
DECLARE
	@OfferId INT,
	@OrganizationId INT,
	@OrganizationName VARCHAR(100),
	@Subject VARCHAR(255),
	@Body VARCHAR(MAX),
	@SentDate DATETIME,
	@Price VARCHAR(32),
	@OrganizationEmail VARCHAR(100),
	@ContactPersonEmail VARCHAR(MAX),
	@ResponsibleEmail VARCHAR(100)
	
DECLARE cur CURSOR FAST_FORWARD FOR
SELECT
	offers.Id AS OfferId,
	offers.OrganizationId,
	organization.Nazov AS OrganizationName,
	ISNULL(offers.[Subject], 'Nezadané') AS [Subject],
	ISNULL(offers.Body, 'Nezadané') AS Body,
	offers.SentDate,
	ISNULL(CAST(offers.Price AS VARCHAR(32)) + ' €', 'Nezadané') AS Price,
	ISNULL(organization.Mail, 'Nezadané') AS OrganizationEmail,
	report.GetKontaktnaOsobaEmail(offers.OrganizationId) AS ContactPersonEmail,
	responsible.Email AS ResponsibleEmail
FROM
	dbo.Offers offers
	LEFT JOIN dbo.OffersSent offersSent
		ON offersSent.OfferId = offers.Id
	LEFT JOIN dbo.Organizacia organization
		ON organization.ID = offers.OrganizationId
	LEFT JOIN dbo.Zamestnanec responsible
		ON responsible.ID = offers.ResponsibleEmployeeId
WHERE
	offersSent.SentDate != offers.SentDate
	OR
	offersSent.SentDate IS NULL

OPEN cur
FETCH NEXT FROM cur INTO
	@OfferId,
	@OrganizationId,
	@OrganizationName,
	@Subject,
	@Body,
	@SentDate,
	@Price,
	@OrganizationEmail,
	@ContactPersonEmail,
	@ResponsibleEmail

WHILE @@FETCH_STATUS = 0
BEGIN
	--SELECT
	--	@OfferId AS OfferId,
	--	@OrganizationId AS OrganizationId,
	--	@Subject AS Subject,
	--	@Body AS Body,
	--	@SentDate AS SentDate,
	--	@Price AS Price,
	--	@OrganizationEmail AS OrganizationEmail,
	--	@ContactPersonEmail AS ContactPersonEmail,
	--	@ResponsibleEmail AS ResponsibleEmail

	DECLARE @Contacts VARCHAR(MAX) = '
--------------------------------------------------------------------------------------------------
<br/>E-mail kontaktných osôb:<br/>
' + @ContactPersonEmail + '<br/>
<br/>Názov organizácie:<br/>
<b>' + @OrganizationName + '</b><br/>
<br/>E-mail organizácie:<br/>
' + @OrganizationEmail + '<br/>
--------------------------------------------------------------------------------------------------
<br/>
<br/>
'
	SET @Subject = REPLACE(@Subject, '${OfferId}', @OfferId)

	DECLARE @AdminBody VARCHAR(MAX) = REPLACE(@Body, '${Price}', @Price)
	SET @AdminBody = REPLACE(@AdminBody, '${OfferId}', @OfferId)
	SET @AdminBody = REPLACE(@AdminBody, char(13), '<br/>' + char(13))
	SET @AdminBody = dbo.GetHtmlBodyOpenTag() + @Contacts + @AdminBody + dbo.GetHtmlBodyCloseTag()
	--PRINT @AdminBody

	EXEC msdb.dbo.sp_send_dbmail
		@recipients = 'miroslav.hanzen@gmail.com;monika.hanzenova@gmail.com',
		@blind_copy_recipients = 'matej.cizmarik@2ring.com',
		@subject = @Subject,
		@body = @AdminBody,
		@body_format = 'HTML'
	
	--IF @ResponsibleEmail IS NOT NULL
	--BEGIN
	--	DECLARE @ResponsibleBody VARCHAR(MAX) = REPLACE(@Body, '${Price}', '-')
	--	SET @ResponsibleBody = REPLACE(@ResponsibleBody, '${OfferId}', @OfferId)
	--	SET @ResponsibleBody = dbo.GetHtmlBodyOpenTag() + @Contacts + @ResponsibleBody + dbo.GetHtmlBodyCloseTag()
	--	--PRINT @ResponsibleBody

	--	EXEC msdb.dbo.sp_send_dbmail
	--		@recipients = @ResponsibleEmail,
	--		@subject = @Subject,
	--		@body = @ResponsibleBody,
	--		@body_format = 'HTML'
	--END

	EXEC [dbo].[OffersSentUpdate] @OfferId, @SentDate

	FETCH NEXT FROM cur INTO
		@OfferId,
		@OrganizationId,
		@OrganizationName,
		@Subject,
		@Body,
		@SentDate,
		@Price,
		@OrganizationEmail,
		@ContactPersonEmail,
		@ResponsibleEmail
END

CLOSE cur
DEALLOCATE cur